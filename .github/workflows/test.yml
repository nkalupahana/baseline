name: Build, Test, & Deploy

on:
  push:
    paths-ignore:
      - 'docs/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: "16.x"
        cache: "npm"
    - run: npm ci
    - name: Build Tests
      run: |
        npm install -g ionic
        npm run build
        ionic cap sync
    - name: Integration Tests
      run: |
        PORT=8100 npx react-scripts -r @cypress/instrument-cra start &
        sleep 60
        npm run test:e2e
      env:
        HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
        HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
        HAPPO_NONCE: ${{ github.run_id }}
    - name: Upload Test Video
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-video
        path: cypress/videos
    - name: Upload Test Screenshots
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-screenshots
        path: cypress/screenshots
    - name: Component Tests
      run: npm run test:component
      env:
        HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
        HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET  }}
        HAPPO_NONCE: ${{ github.run_id }}
    - name: Upload to Happo
      run: npx happo-e2e finalize
      env:
        HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
        HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET  }}
        HAPPO_NONCE: ${{ github.run_id }}
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
    - name: Upload Test Data
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage
        
  android:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: "16.x"
        cache: "npm"
    - run: npm ci
    - name: Build (Ionic)
      run: |
        npm install -g ionic
        npm run build
        ionic cap sync
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - name: Build (Android)
      run: |
        cd android
        chmod +x gradlew
        ./gradlew build
        ./gradlew bundleDebug
    - name: Send to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: outputs
        path: android/app/build/outputs
    - name: Send to DeployGate
      env:
        token: ${{ secrets.DEPLOYGATE_TOKEN }}
        COMMIT_MSG: ${{ github.event.commits[0].message }}
      run: curl -F "token=${token}" -F "file=@android/app/build/outputs/bundle/debug/app-debug.aab" -F "message=Upload from GitHub Actions, ref ${GITHUB_REF}, sha ${GITHUB_SHA}, msg ${COMMIT_MSG}" https://deploygate.com/api/users/nkalupahana/apps

  ios:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: "16.x"
        cache: "npm"
    - run: npm ci
    - name: Build (Ionic)
      run: |
        npm install -g ionic
        npm run build
        ionic cap sync
    - name: Deploy to TestFlight
      run: |
        brew install fastlane
        cd ios/App
        echo "$APP_STORE_CONNECT_KEY" > authkey.json
        fastlane beta
      env:
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
        COMMIT_MSG: ${{ github.event.commits[0].message }}